name: Deploy API to App Service (artifact)

on:
  push:
    branches: [ main ]
    paths:
      - 'apps/api/**'
      - '.github/workflows/api-deploy.yml'
  workflow_dispatch: {}

concurrency:
  group: api-deploy
  cancel-in-progress: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      APP_NAME: app-11plusplatform-dev-uks
      API_DIR: apps/api
      ARTIFACT: api.zip

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: ${{ env.API_DIR }}/package-lock.json

      # 1) Install WITH dev deps so tsc has types
      - name: Install deps (with dev)
        working-directory: ${{ env.API_DIR }}
        run: npm ci

      # 2) Build now (uses dev deps like typescript/@types/node)
      - name: Build (tsc)
        working-directory: ${{ env.API_DIR }}
        run: npm run build

      # 3) Replace node_modules with PROD-only to slim the package
      - name: Install prod-only deps
        working-directory: ${{ env.API_DIR }}
        run: |
          rm -rf node_modules
          npm ci --omit=dev

      # 4) Create ZIP including dist + runtime deps
      - name: Create deploy zip (dist + package files + node_modules)
        working-directory: ${{ env.API_DIR }}
        run: |
          rm -f ../${{ env.ARTIFACT }}
          zip -r ../${{ env.ARTIFACT }} \
            dist \
            package.json \
            package-lock.json \
            node_modules

      - name: Show packaged package.json
        working-directory: ${{ env.API_DIR }}
        run: unzip -p ../${{ env.ARTIFACT }} package.json

      - name: List ZIP contents (top)
        working-directory: ${{ env.API_DIR }}
        run: unzip -l ../${{ env.ARTIFACT }} | sed -n '1,200p'        

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.APP_NAME }}
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_API }}
          package: ${{ env.API_DIR }}/../${{ env.ARTIFACT }}